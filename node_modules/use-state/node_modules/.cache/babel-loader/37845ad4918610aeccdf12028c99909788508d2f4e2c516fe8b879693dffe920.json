{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC_User\\\\Desktop\\\\project\\\\react-monorepo\\\\packages\\\\use-state\\\\src\\\\components\\\\axios.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Axios = () => {\n  _s();\n  const [users, setUsers] = useState([]); // ユーザーのリストを保持する状態\n\n  useEffec(() => {\n    // コンポーネントのマウント時にAPIリクエストを実行\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      setUsers(response.data); // 取得したデータを状態にセット\n    }).catch(error => {\n      console.error('データの取得に失敗しました:', error);\n    });\n  }, []); // 空の依存配列で、初回マウント時にのみ実行\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30EA\\u30B9\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Axios, \"Cpyf554p+p+sH4s1IyxJRL5yxCE=\", true);\n_c = Axios;\nexport default Axios;\nvar _c;\n$RefreshReg$(_c, \"Axios\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","Axios","_s","users","setUsers","useEffec","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","id","_c","$RefreshReg$"],"sources":["C:/Users/PC_User/Desktop/project/react-monorepo/packages/use-state/src/components/axios.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Axios = () => {\r\n\r\n\r\n\r\n  const [users, setUsers] = useState([]); // ユーザーのリストを保持する状態\r\n\r\n  useEffec(() => {\r\n    // コンポーネントのマウント時にAPIリクエストを実行\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => {\r\n        setUsers(response.data); // 取得したデータを状態にセット\r\n      })\r\n      .catch(error => {\r\n        console.error('データの取得に失敗しました:', error);\r\n      });\r\n  }, []); // 空の依存配列で、初回マウント時にのみ実行\r\n\r\n  return (\r\n    <div>\r\n      <h1>ユーザーリスト</h1>\r\n      <ul>\r\n        {users.map(user => (\r\n          <li key={user.id}>{user.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Axios;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAIlB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCO,QAAQ,CAAC,MAAM;IACb;IACAT,KAAK,CAACU,GAAG,CAAC,4CAA4C,CAAC,CACpDC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACe,GAAG,CAACC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}